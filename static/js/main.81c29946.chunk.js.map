{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","onClick","TodoList","todos","elements","map","item","id","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","toggleProperty","addItem","text","newItem","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81c29946.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ( {toDo, done} ) => {\r\n    return (\r\n        <div className=\"app-header\">\r\n            <h1>Todo List</h1>\r\n            <h2> {toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder='type to search'\r\n                value={this.state.term} \r\n                onChange={this.onSearchChange} />\r\n        );\r\n    }\r\n}\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n    \r\n    // state = {\r\n    //     done: false,\r\n    //     important: false\r\n    // };\r\n    \r\n    //onMarkImportant и onLabelClick больше не нужны\r\n    // их заменили на onToggleImportant onToggleDone\r\n    // onMarkImportant = () => {\r\n    //     this.setState(({ important }) => {\r\n    //         return {\r\n    //             important: !important\r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n    //Ver.2\r\n    // onLabelClick = () => {\r\n    //     this.setState(({done}) => {\r\n    //         return {\r\n    //             done: !done\r\n    //         }\r\n    //     });\r\n    // };\r\n    // Ver.1\r\n    // constructor() {\r\n    //     super();\r\n    //     this.onLabelClick = () => {\r\n    //         console.log(`Done: ${this.props.label}`)\r\n    //     };\r\n    // }\r\n\r\n    render() {\r\n      const {label, onDeleted, onToggleImportant, \r\n            onToggleDone, done, important} = this.props;\r\n    //   const { done, important } = this.state;\r\n\r\n      let className = 'todo-list-item';\r\n      if(done) {\r\n          className += ' done';\r\n      }\r\n      if(important) {\r\n        className += ' important';\r\n      }\r\n      \r\n        return (\r\n            <span className={className}>\r\n                <span className=\"todo-list-item-label\" \r\n                      onClick={onToggleDone}>\r\n                    {label}\r\n                </span>\r\n    \r\n                <button type=\"button\" \r\n                        className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n    \r\n                <button type=\"button\" \r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick={onDeleted}>\r\n                        \r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    };\r\n};\r\n\r\n// const TodoListItemFunc = ( {label, important = false} ) => {\r\n//     const style = {\r\n//         color: important ? 'steelblue' : 'black',\r\n//         fontWeight: important ? 'bold' : 'normal'\r\n//     };\r\n//     return (\r\n//         <span className=\"todo-list-item\">\r\n//             <span className=\"todo-list-item-label\" \r\n//                 style={style}>\r\n//                 {label}\r\n//             </span>\r\n\r\n//             <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\">\r\n//                 <i className=\"fa fa-exclamation\" />\r\n//             </button>\r\n\r\n//             <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\">\r\n//                 <i className=\"fa fa-trash-o\" />\r\n//             </button>\r\n//         </span>\r\n//             );\r\n// };\r\n\r\n// export default TodoListItem;","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ( {todos, onDeleted, onToggleImportant, onToggleDone} ) => {\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                {/* <TodoListItem label={item.label} important={item.important} /> */}\r\n                <TodoListItem {...itemProps}\r\n                onDeleted={() => onDeleted(id)} \r\n                onToggleImportant={() =>onToggleImportant(id)}\r\n                onToggleDone={() =>onToggleDone(id)}/>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component{\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return(\r\n                <button type=\"button\" \r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={() => onFilterChange(name)} >\r\n                            {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n\r\n                {buttons}\r\n\r\n                {/* <button type=\"button\" className=\"btn btn-info\">All</button>\r\n                <button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>\r\n                <button type=\"button\" className=\"btn btn-outline-secondary\">Done</button> */}\r\n            </div>\r\n        );         \r\n    }\r\n}\r\n\r\n// const ItemStatusFilterfunc = () => {\r\n//     return (\r\n//         <div className=\"btn-group\">\r\n//             <button type=\"button\" className=\"btn btn-info\">All</button>\r\n//             <button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>\r\n//             <button type=\"button\" className=\"btn btn-outline-secondary\">Done</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ItemStatusFilter;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n             onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"What needs to be done\"\r\n                       value={this.state.label} />\r\n                <button \r\n                    className=\"btn btn-outline-secondary\"\r\n                    >Add Item\r\n                </button>\r\n            </form>\r\n        )        \r\n    }\r\n}\r\n","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css'\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch'),\r\n        // { label: 'Drink Coffee', important: false, id: 1},\r\n        // { label: 'Make Awesome App', important: true, id: 2},\r\n        // { label: 'Have a lunch', important: false, id: 3},\r\n      ],\r\n        term: '',\r\n        filter: 'all' // active, all, done\r\n    };\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id );\r\n\r\n            //[a, b, c, d, e]   \r\n            //[a, b,    d, e]\r\n            // const before = todoData.slice(0, idx);\r\n            // const after = todoData.slice(idx + 1);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx), \r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n            const idx = arr.findIndex((el) => el.id === id );\r\n            \r\n            const oldItem = arr[idx];\r\n            const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n            return [\r\n                ...arr.slice(0, idx), \r\n                newItem,\r\n                ...arr.slice(idx + 1)\r\n            ];\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) =>{\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) =>{\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n    \r\n    addItem = (text) => {\r\n        //generate id?\r\n        const newItem = this.createTodoItem(text);\r\n        // {\r\n        //     label: text,\r\n        //     important: false,\r\n        //     id: this.maxId++\r\n        // }\r\n        //add elem. in array?\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ]\r\n            return {\r\n                todoData: newArr\r\n            }\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    search(items, term) {\r\n        if(term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n       return items.filter((item) => {\r\n            return item.label\r\n                   .toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filter(items, filter) {\r\n\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default: \r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { todoData, term, filter } =this.state;\r\n\r\n        const visibleItems = this.filter(\r\n            this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData\r\n                          .filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n                <div className=\"todo-app\">\r\n                    <AppHeader toDo={todoCount} done={doneCount}/>\r\n                    <div className=\"top-panel\">\r\n                        <SearchPanel onSearchChange={this.onSearchChange} />\r\n                        <ItemStatusFilter \r\n                            filter={filter}\r\n                            onFilterChange={this.onFilterChange} />\r\n                    </div>\r\n                    \r\n                    <TodoList \r\n                    todos={visibleItems}\r\n                    onDeleted={this.deleteItem} \r\n                    onToggleImportant={this.onToggleImportant} \r\n                    onToggleDone={this.onToggleDone} />\r\n\r\n                    <ItemAddForm onItemAdded={this.addItem} />\r\n                </div>\r\n            );\r\n        }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}